{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ssafy\\\\ssafy-6-\\uACF5\\uD1B5\\\\S06P12A504\\\\frontend\\\\src\\\\containers\\\\write\\\\EditorContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Editor from '../../components/write/Editor';\nimport { initialize, changeField } from '../../_actions/write_actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorContainer = () => {\n  _s();\n\n  const dispatch = useDispatch(); // 리덕스 스토어에서 title과 body를 불러옴\n  // write라는 state를 찾고, 그것의 title과 body를 찾음\n\n  const {\n    postTitle,\n    postContent\n  } = useSelector(_ref => {\n    let {\n      write\n    } = _ref;\n    return {\n      postTitle: write.postTitle,\n      postContent: write.postContent\n    };\n  }); // changeField가 'write/CHANGE_FIELD' 액션을 생성한다.\n  // 그 액션에는 {key, value}라는 payload가 들어왓을 때 그 payload를 return하는 action\n\n  const onChangeField = useCallback(payload => {\n    dispatch(changeField(payload));\n  }, [dispatch]); // 다시 들어왔을 때는 값 초기화\n\n  useEffect(() => {\n    return () => {\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n  return (\n    /*#__PURE__*/\n    // 불러온 title과 body를 바보 editor에 전달\n    _jsxDEV(Editor, {\n      onChangeField: onChangeField,\n      postTitle: postTitle,\n      postContent: postContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(EditorContainer, \"CuaZmnDnP7BwlZWktAR0BrugFqc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditorContainer;\nexport default EditorContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorContainer\");","map":{"version":3,"sources":["C:/Users/ssafy/ssafy-6-공통/S06P12A504/frontend/src/containers/write/EditorContainer.js"],"names":["useEffect","useCallback","useDispatch","useSelector","Editor","initialize","changeField","EditorContainer","dispatch","postTitle","postContent","write","onChangeField","payload"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,8BAAxC;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAD4B,CAE5B;AACA;;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BP,WAAW,CAAC;AAAA,QAAC;AAAEQ,MAAAA;AAAF,KAAD;AAAA,WAAgB;AAC7DF,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAD4C;AAE7DC,MAAAA,WAAW,EAAEC,KAAK,CAACD;AAF0C,KAAhB;AAAA,GAAD,CAA9C,CAJ4B,CAS5B;AACA;;AACA,QAAME,aAAa,GAAGX,WAAW,CAC9BY,OAAD,IAAa;AACXL,IAAAA,QAAQ,CAACF,WAAW,CAACO,OAAD,CAAZ,CAAR;AACD,GAH8B,EAI/B,CAACL,QAAD,CAJ+B,CAAjC,CAX4B,CAkB5B;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXQ,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACG,QAAD,CAJM,CAAT;AAMA;AAAA;AACE;AACA,YAAC,MAAD;AACE,MAAA,aAAa,EAAEI,aADjB;AAEE,MAAA,SAAS,EAAEH,SAFb;AAGE,MAAA,WAAW,EAAEC;AAHf;AAAA;AAAA;AAAA;AAAA;AAFF;AAQD,CAjCD;;GAAMH,e;UACaL,W,EAGkBC,W;;;KAJ/BI,e;AAmCN,eAAeA,eAAf","sourcesContent":["import { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Editor from '../../components/write/Editor';\r\nimport { initialize, changeField } from '../../_actions/write_actions';\r\n\r\nconst EditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  // 리덕스 스토어에서 title과 body를 불러옴\r\n  // write라는 state를 찾고, 그것의 title과 body를 찾음\r\n  const { postTitle, postContent } = useSelector(({ write }) => ({\r\n    postTitle: write.postTitle,\r\n    postContent: write.postContent,\r\n  }));\r\n\r\n  // changeField가 'write/CHANGE_FIELD' 액션을 생성한다.\r\n  // 그 액션에는 {key, value}라는 payload가 들어왓을 때 그 payload를 return하는 action\r\n  const onChangeField = useCallback(\r\n    (payload) => {\r\n      dispatch(changeField(payload));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 다시 들어왔을 때는 값 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    // 불러온 title과 body를 바보 editor에 전달\r\n    <Editor\r\n      onChangeField={onChangeField}\r\n      postTitle={postTitle}\r\n      postContent={postContent}\r\n    ></Editor>\r\n  );\r\n};\r\n\r\nexport default EditorContainer;\r\n"]},"metadata":{},"sourceType":"module"}